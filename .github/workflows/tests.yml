name: testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypass
          POSTGRES_DB: test_fintrack_app
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U myuser"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: "postgres://myuser:mypass@localhost/test_fintrack_app"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install SQLx CLI
        run: |
          cargo install sqlx-cli

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U myuser; do
            sleep 1
          done

      - name: Run rustfmt
        run: |
          cd backend && cargo fmt -- --check
            
      - name: Generate SQLx query cache
        run: |
          cd backend && cargo sqlx prepare
      
      - name: Run migrations
        run: |
          cd backend && sqlx migrate run --database-url ${{ env.DATABASE_URL }}


      - name: Run clippy
        run: |
          cd backend && cargo clippy -- -D warnings

      - name: Create test database
        run: |
          cd backend && sqlx database create --database-url ${{ env.DATABASE_URL }}

      - name: Run tests
        run: |
          cd backend && RUST_TEST_THREADS=1 cargo test
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}

      - name: Drop test database
        run: |
          cd backend && sqlx database drop --database-url ${{ env.DATABASE_URL }} -y
